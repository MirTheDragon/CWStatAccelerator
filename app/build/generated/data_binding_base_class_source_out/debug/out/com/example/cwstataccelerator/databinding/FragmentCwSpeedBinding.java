// Generated by view binder compiler. Do not edit!
package com.example.cwstataccelerator.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cwstataccelerator.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCwSpeedBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView frequencyLabel;

  @NonNull
  public final SeekBar frequencySeekbar;

  @NonNull
  public final TextView maxTrainingSpeedLabel;

  @NonNull
  public final SeekBar maxTrainingSpeedSeekbar;

  @NonNull
  public final TextView minTrainingSpeedLabel;

  @NonNull
  public final SeekBar minTrainingSpeedSeekbar;

  @NonNull
  public final TextView rampLabel;

  @NonNull
  public final SeekBar rampSeekbar;

  @NonNull
  public final TextView snrLabel;

  @NonNull
  public final SeekBar snrSeekbar;

  @NonNull
  public final TextView speedLabel;

  @NonNull
  public final SeekBar speedSeekbar;

  private FragmentCwSpeedBinding(@NonNull ScrollView rootView, @NonNull TextView frequencyLabel,
      @NonNull SeekBar frequencySeekbar, @NonNull TextView maxTrainingSpeedLabel,
      @NonNull SeekBar maxTrainingSpeedSeekbar, @NonNull TextView minTrainingSpeedLabel,
      @NonNull SeekBar minTrainingSpeedSeekbar, @NonNull TextView rampLabel,
      @NonNull SeekBar rampSeekbar, @NonNull TextView snrLabel, @NonNull SeekBar snrSeekbar,
      @NonNull TextView speedLabel, @NonNull SeekBar speedSeekbar) {
    this.rootView = rootView;
    this.frequencyLabel = frequencyLabel;
    this.frequencySeekbar = frequencySeekbar;
    this.maxTrainingSpeedLabel = maxTrainingSpeedLabel;
    this.maxTrainingSpeedSeekbar = maxTrainingSpeedSeekbar;
    this.minTrainingSpeedLabel = minTrainingSpeedLabel;
    this.minTrainingSpeedSeekbar = minTrainingSpeedSeekbar;
    this.rampLabel = rampLabel;
    this.rampSeekbar = rampSeekbar;
    this.snrLabel = snrLabel;
    this.snrSeekbar = snrSeekbar;
    this.speedLabel = speedLabel;
    this.speedSeekbar = speedSeekbar;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCwSpeedBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCwSpeedBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_cw_speed, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCwSpeedBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.frequency_label;
      TextView frequencyLabel = ViewBindings.findChildViewById(rootView, id);
      if (frequencyLabel == null) {
        break missingId;
      }

      id = R.id.frequency_seekbar;
      SeekBar frequencySeekbar = ViewBindings.findChildViewById(rootView, id);
      if (frequencySeekbar == null) {
        break missingId;
      }

      id = R.id.max_training_speed_label;
      TextView maxTrainingSpeedLabel = ViewBindings.findChildViewById(rootView, id);
      if (maxTrainingSpeedLabel == null) {
        break missingId;
      }

      id = R.id.max_training_speed_seekbar;
      SeekBar maxTrainingSpeedSeekbar = ViewBindings.findChildViewById(rootView, id);
      if (maxTrainingSpeedSeekbar == null) {
        break missingId;
      }

      id = R.id.min_training_speed_label;
      TextView minTrainingSpeedLabel = ViewBindings.findChildViewById(rootView, id);
      if (minTrainingSpeedLabel == null) {
        break missingId;
      }

      id = R.id.min_training_speed_seekbar;
      SeekBar minTrainingSpeedSeekbar = ViewBindings.findChildViewById(rootView, id);
      if (minTrainingSpeedSeekbar == null) {
        break missingId;
      }

      id = R.id.ramp_label;
      TextView rampLabel = ViewBindings.findChildViewById(rootView, id);
      if (rampLabel == null) {
        break missingId;
      }

      id = R.id.ramp_seekbar;
      SeekBar rampSeekbar = ViewBindings.findChildViewById(rootView, id);
      if (rampSeekbar == null) {
        break missingId;
      }

      id = R.id.snr_label;
      TextView snrLabel = ViewBindings.findChildViewById(rootView, id);
      if (snrLabel == null) {
        break missingId;
      }

      id = R.id.snr_seekbar;
      SeekBar snrSeekbar = ViewBindings.findChildViewById(rootView, id);
      if (snrSeekbar == null) {
        break missingId;
      }

      id = R.id.speed_label;
      TextView speedLabel = ViewBindings.findChildViewById(rootView, id);
      if (speedLabel == null) {
        break missingId;
      }

      id = R.id.speed_seekbar;
      SeekBar speedSeekbar = ViewBindings.findChildViewById(rootView, id);
      if (speedSeekbar == null) {
        break missingId;
      }

      return new FragmentCwSpeedBinding((ScrollView) rootView, frequencyLabel, frequencySeekbar,
          maxTrainingSpeedLabel, maxTrainingSpeedSeekbar, minTrainingSpeedLabel,
          minTrainingSpeedSeekbar, rampLabel, rampSeekbar, snrLabel, snrSeekbar, speedLabel,
          speedSeekbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
